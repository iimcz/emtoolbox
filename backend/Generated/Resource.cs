// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: resource.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Naki3D.Common.Protocol {

  /// <summary>Holder for reflection information generated from resource.proto</summary>
  public static partial class ResourceReflection {

    #region Descriptor
    /// <summary>File descriptor for resource.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ResourceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5yZXNvdXJjZS5wcm90bxIWbmFraTNkLmNvbW1vbi5wcm90b2NvbCK6AQoI",
            "UmVzb3VyY2USMAoFc2NlbmUYASABKAsyHy5uYWtpM2QuY29tbW9uLnByb3Rv",
            "Y29sLlNjZW5lM0RIABIuCgVpbWFnZRgCIAEoCzIdLm5ha2kzZC5jb21tb24u",
            "cHJvdG9jb2wuSW1hZ2VIABIuCgV2aWRlbxgDIAEoCzIdLm5ha2kzZC5jb21t",
            "b24ucHJvdG9jb2wuVmlkZW9IABIUCgxpbnRlcmFjdGlvbnMYBCABKAlCBgoE",
            "ZGF0YSIXCgdTY2VuZTNEEgwKBGdsdGYYASABKAwijAEKBUltYWdlEg4KBmlt",
            "YWdlcxgBIAMoDBJGChJpbWFnZV9wcmVzZW50YXRpb24YAiABKA4yKi5uYWtp",
            "M2QuY29tbW9uLnByb3RvY29sLkltYWdlLlByZXNlbnRhdGlvbiIrCgxQcmVz",
            "ZW50YXRpb24SDQoJU0xJREVTSE9XEAASDAoIUEFOX1pPT00QASLLAQoFVmlk",
            "ZW8SDAoEZGF0YRgBIAEoDBI9Cgt2aWRlb19jb2RlYxgCIAEoDjIoLm5ha2kz",
            "ZC5jb21tb24ucHJvdG9jb2wuVmlkZW8uVmlkZW9Db2RlYxI9CgthdWRpb19j",
            "b2RlYxgDIAEoDjIoLm5ha2kzZC5jb21tb24ucHJvdG9jb2wuVmlkZW8uQXVk",
            "aW9Db2RlYyIeCgpWaWRlb0NvZGVjEgcKA1ZQORAAEgcKA0FWMRABIhYKCkF1",
            "ZGlvQ29kZWMSCAoET1BVUxAAYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Naki3D.Common.Protocol.Resource), global::Naki3D.Common.Protocol.Resource.Parser, new[]{ "Scene", "Image", "Video", "Interactions" }, new[]{ "Data" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Naki3D.Common.Protocol.Scene3D), global::Naki3D.Common.Protocol.Scene3D.Parser, new[]{ "Gltf" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Naki3D.Common.Protocol.Image), global::Naki3D.Common.Protocol.Image.Parser, new[]{ "Images", "ImagePresentation" }, null, new[]{ typeof(global::Naki3D.Common.Protocol.Image.Types.Presentation) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Naki3D.Common.Protocol.Video), global::Naki3D.Common.Protocol.Video.Parser, new[]{ "Data", "VideoCodec", "AudioCodec" }, null, new[]{ typeof(global::Naki3D.Common.Protocol.Video.Types.VideoCodec), typeof(global::Naki3D.Common.Protocol.Video.Types.AudioCodec) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class Resource : pb::IMessage<Resource> {
    private static readonly pb::MessageParser<Resource> _parser = new pb::MessageParser<Resource>(() => new Resource());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Resource> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Naki3D.Common.Protocol.ResourceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource(Resource other) : this() {
      interactions_ = other.interactions_;
      switch (other.DataCase) {
        case DataOneofCase.Scene:
          Scene = other.Scene.Clone();
          break;
        case DataOneofCase.Image:
          Image = other.Image.Clone();
          break;
        case DataOneofCase.Video:
          Video = other.Video.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resource Clone() {
      return new Resource(this);
    }

    /// <summary>Field number for the "scene" field.</summary>
    public const int SceneFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Naki3D.Common.Protocol.Scene3D Scene {
      get { return dataCase_ == DataOneofCase.Scene ? (global::Naki3D.Common.Protocol.Scene3D) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Scene;
      }
    }

    /// <summary>Field number for the "image" field.</summary>
    public const int ImageFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Naki3D.Common.Protocol.Image Image {
      get { return dataCase_ == DataOneofCase.Image ? (global::Naki3D.Common.Protocol.Image) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Image;
      }
    }

    /// <summary>Field number for the "video" field.</summary>
    public const int VideoFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Naki3D.Common.Protocol.Video Video {
      get { return dataCase_ == DataOneofCase.Video ? (global::Naki3D.Common.Protocol.Video) data_ : null; }
      set {
        data_ = value;
        dataCase_ = value == null ? DataOneofCase.None : DataOneofCase.Video;
      }
    }

    /// <summary>Field number for the "interactions" field.</summary>
    public const int InteractionsFieldNumber = 4;
    private string interactions_ = "";
    /// <summary>
    /// Probably JSON, we've agreed there's no point in binding it on protobuf layer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Interactions {
      get { return interactions_; }
      set {
        interactions_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object data_;
    /// <summary>Enum of possible cases for the "data" oneof.</summary>
    public enum DataOneofCase {
      None = 0,
      Scene = 1,
      Image = 2,
      Video = 3,
    }
    private DataOneofCase dataCase_ = DataOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DataOneofCase DataCase {
      get { return dataCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearData() {
      dataCase_ = DataOneofCase.None;
      data_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Resource);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Resource other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Scene, other.Scene)) return false;
      if (!object.Equals(Image, other.Image)) return false;
      if (!object.Equals(Video, other.Video)) return false;
      if (Interactions != other.Interactions) return false;
      if (DataCase != other.DataCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dataCase_ == DataOneofCase.Scene) hash ^= Scene.GetHashCode();
      if (dataCase_ == DataOneofCase.Image) hash ^= Image.GetHashCode();
      if (dataCase_ == DataOneofCase.Video) hash ^= Video.GetHashCode();
      if (Interactions.Length != 0) hash ^= Interactions.GetHashCode();
      hash ^= (int) dataCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dataCase_ == DataOneofCase.Scene) {
        output.WriteRawTag(10);
        output.WriteMessage(Scene);
      }
      if (dataCase_ == DataOneofCase.Image) {
        output.WriteRawTag(18);
        output.WriteMessage(Image);
      }
      if (dataCase_ == DataOneofCase.Video) {
        output.WriteRawTag(26);
        output.WriteMessage(Video);
      }
      if (Interactions.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Interactions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dataCase_ == DataOneofCase.Scene) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Scene);
      }
      if (dataCase_ == DataOneofCase.Image) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Image);
      }
      if (dataCase_ == DataOneofCase.Video) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Video);
      }
      if (Interactions.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Interactions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Resource other) {
      if (other == null) {
        return;
      }
      if (other.Interactions.Length != 0) {
        Interactions = other.Interactions;
      }
      switch (other.DataCase) {
        case DataOneofCase.Scene:
          if (Scene == null) {
            Scene = new global::Naki3D.Common.Protocol.Scene3D();
          }
          Scene.MergeFrom(other.Scene);
          break;
        case DataOneofCase.Image:
          if (Image == null) {
            Image = new global::Naki3D.Common.Protocol.Image();
          }
          Image.MergeFrom(other.Image);
          break;
        case DataOneofCase.Video:
          if (Video == null) {
            Video = new global::Naki3D.Common.Protocol.Video();
          }
          Video.MergeFrom(other.Video);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Naki3D.Common.Protocol.Scene3D subBuilder = new global::Naki3D.Common.Protocol.Scene3D();
            if (dataCase_ == DataOneofCase.Scene) {
              subBuilder.MergeFrom(Scene);
            }
            input.ReadMessage(subBuilder);
            Scene = subBuilder;
            break;
          }
          case 18: {
            global::Naki3D.Common.Protocol.Image subBuilder = new global::Naki3D.Common.Protocol.Image();
            if (dataCase_ == DataOneofCase.Image) {
              subBuilder.MergeFrom(Image);
            }
            input.ReadMessage(subBuilder);
            Image = subBuilder;
            break;
          }
          case 26: {
            global::Naki3D.Common.Protocol.Video subBuilder = new global::Naki3D.Common.Protocol.Video();
            if (dataCase_ == DataOneofCase.Video) {
              subBuilder.MergeFrom(Video);
            }
            input.ReadMessage(subBuilder);
            Video = subBuilder;
            break;
          }
          case 34: {
            Interactions = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Scene3D : pb::IMessage<Scene3D> {
    private static readonly pb::MessageParser<Scene3D> _parser = new pb::MessageParser<Scene3D>(() => new Scene3D());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Scene3D> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Naki3D.Common.Protocol.ResourceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scene3D() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scene3D(Scene3D other) : this() {
      gltf_ = other.gltf_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Scene3D Clone() {
      return new Scene3D(this);
    }

    /// <summary>Field number for the "gltf" field.</summary>
    public const int GltfFieldNumber = 1;
    private pb::ByteString gltf_ = pb::ByteString.Empty;
    /// <summary>
    /// GLTF contains models, composition, textures, everything sould be contained
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Gltf {
      get { return gltf_; }
      set {
        gltf_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Scene3D);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Scene3D other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Gltf != other.Gltf) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Gltf.Length != 0) hash ^= Gltf.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Gltf.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Gltf);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Gltf.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Gltf);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Scene3D other) {
      if (other == null) {
        return;
      }
      if (other.Gltf.Length != 0) {
        Gltf = other.Gltf;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Gltf = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Image : pb::IMessage<Image> {
    private static readonly pb::MessageParser<Image> _parser = new pb::MessageParser<Image>(() => new Image());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Image> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Naki3D.Common.Protocol.ResourceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image(Image other) : this() {
      images_ = other.images_.Clone();
      imagePresentation_ = other.imagePresentation_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image Clone() {
      return new Image(this);
    }

    /// <summary>Field number for the "images" field.</summary>
    public const int ImagesFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_images_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> images_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Images {
      get { return images_; }
    }

    /// <summary>Field number for the "image_presentation" field.</summary>
    public const int ImagePresentationFieldNumber = 2;
    private global::Naki3D.Common.Protocol.Image.Types.Presentation imagePresentation_ = global::Naki3D.Common.Protocol.Image.Types.Presentation.Slideshow;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Naki3D.Common.Protocol.Image.Types.Presentation ImagePresentation {
      get { return imagePresentation_; }
      set {
        imagePresentation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Image);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Image other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!images_.Equals(other.images_)) return false;
      if (ImagePresentation != other.ImagePresentation) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= images_.GetHashCode();
      if (ImagePresentation != global::Naki3D.Common.Protocol.Image.Types.Presentation.Slideshow) hash ^= ImagePresentation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      images_.WriteTo(output, _repeated_images_codec);
      if (ImagePresentation != global::Naki3D.Common.Protocol.Image.Types.Presentation.Slideshow) {
        output.WriteRawTag(16);
        output.WriteEnum((int) ImagePresentation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += images_.CalculateSize(_repeated_images_codec);
      if (ImagePresentation != global::Naki3D.Common.Protocol.Image.Types.Presentation.Slideshow) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ImagePresentation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Image other) {
      if (other == null) {
        return;
      }
      images_.Add(other.images_);
      if (other.ImagePresentation != global::Naki3D.Common.Protocol.Image.Types.Presentation.Slideshow) {
        ImagePresentation = other.ImagePresentation;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            images_.AddEntriesFrom(input, _repeated_images_codec);
            break;
          }
          case 16: {
            ImagePresentation = (global::Naki3D.Common.Protocol.Image.Types.Presentation) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Image message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Presentation {
        [pbr::OriginalName("SLIDESHOW")] Slideshow = 0,
        [pbr::OriginalName("PAN_ZOOM")] PanZoom = 1,
      }

    }
    #endregion

  }

  public sealed partial class Video : pb::IMessage<Video> {
    private static readonly pb::MessageParser<Video> _parser = new pb::MessageParser<Video>(() => new Video());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Video> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Naki3D.Common.Protocol.ResourceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Video() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Video(Video other) : this() {
      data_ = other.data_;
      videoCodec_ = other.videoCodec_;
      audioCodec_ = other.audioCodec_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Video Clone() {
      return new Video(this);
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 1;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// Separate audio/video streams maybe?
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "video_codec" field.</summary>
    public const int VideoCodecFieldNumber = 2;
    private global::Naki3D.Common.Protocol.Video.Types.VideoCodec videoCodec_ = global::Naki3D.Common.Protocol.Video.Types.VideoCodec.Vp9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Naki3D.Common.Protocol.Video.Types.VideoCodec VideoCodec {
      get { return videoCodec_; }
      set {
        videoCodec_ = value;
      }
    }

    /// <summary>Field number for the "audio_codec" field.</summary>
    public const int AudioCodecFieldNumber = 3;
    private global::Naki3D.Common.Protocol.Video.Types.AudioCodec audioCodec_ = global::Naki3D.Common.Protocol.Video.Types.AudioCodec.Opus;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Naki3D.Common.Protocol.Video.Types.AudioCodec AudioCodec {
      get { return audioCodec_; }
      set {
        audioCodec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Video);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Video other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Data != other.Data) return false;
      if (VideoCodec != other.VideoCodec) return false;
      if (AudioCodec != other.AudioCodec) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (VideoCodec != global::Naki3D.Common.Protocol.Video.Types.VideoCodec.Vp9) hash ^= VideoCodec.GetHashCode();
      if (AudioCodec != global::Naki3D.Common.Protocol.Video.Types.AudioCodec.Opus) hash ^= AudioCodec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Data.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Data);
      }
      if (VideoCodec != global::Naki3D.Common.Protocol.Video.Types.VideoCodec.Vp9) {
        output.WriteRawTag(16);
        output.WriteEnum((int) VideoCodec);
      }
      if (AudioCodec != global::Naki3D.Common.Protocol.Video.Types.AudioCodec.Opus) {
        output.WriteRawTag(24);
        output.WriteEnum((int) AudioCodec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (VideoCodec != global::Naki3D.Common.Protocol.Video.Types.VideoCodec.Vp9) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) VideoCodec);
      }
      if (AudioCodec != global::Naki3D.Common.Protocol.Video.Types.AudioCodec.Opus) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) AudioCodec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Video other) {
      if (other == null) {
        return;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      if (other.VideoCodec != global::Naki3D.Common.Protocol.Video.Types.VideoCodec.Vp9) {
        VideoCodec = other.VideoCodec;
      }
      if (other.AudioCodec != global::Naki3D.Common.Protocol.Video.Types.AudioCodec.Opus) {
        AudioCodec = other.AudioCodec;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Data = input.ReadBytes();
            break;
          }
          case 16: {
            VideoCodec = (global::Naki3D.Common.Protocol.Video.Types.VideoCodec) input.ReadEnum();
            break;
          }
          case 24: {
            AudioCodec = (global::Naki3D.Common.Protocol.Video.Types.AudioCodec) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Video message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum VideoCodec {
        [pbr::OriginalName("VP9")] Vp9 = 0,
        [pbr::OriginalName("AV1")] Av1 = 1,
      }

      public enum AudioCodec {
        [pbr::OriginalName("OPUS")] Opus = 0,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
