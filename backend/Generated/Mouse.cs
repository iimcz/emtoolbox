// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: mouse.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Naki3D.Common.Protocol {

  /// <summary>Holder for reflection information generated from mouse.proto</summary>
  public static partial class MouseReflection {

    #region Descriptor
    /// <summary>File descriptor for mouse.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MouseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cgttb3VzZS5wcm90bxIWbmFraTNkLmNvbW1vbi5wcm90b2NvbBoLdHlwZXMu",
            "cHJvdG8idQoNTW91c2VNb3ZlRGF0YRIxCghhYnNvbHV0ZRgBIAEoCzIfLm5h",
            "a2kzZC5jb21tb24ucHJvdG9jb2wuVmVjdG9yMhIxCghyZWxhdGl2ZRgCIAEo",
            "CzIfLm5ha2kzZC5jb21tb24ucHJvdG9jb2wuVmVjdG9yMiJbCg9Nb3VzZUJ1",
            "dHRvbkRhdGESNQoEdHlwZRgBIAEoDjInLm5ha2kzZC5jb21tb24ucHJvdG9j",
            "b2wuTW91c2VBY3Rpb25UeXBlEhEKCWJ1dHRvbl9pZBgCIAEoBSJICg9Nb3Vz",
            "ZVNjcm9sbERhdGESNQoEdHlwZRgBIAEoDjInLm5ha2kzZC5jb21tb24ucHJv",
            "dG9jb2wuTW91c2VTY3JvbGxUeXBlKjEKD01vdXNlQWN0aW9uVHlwZRINCglC",
            "VVRUT05fVVAQABIPCgtCVVRUT05fRE9XThABKjEKD01vdXNlU2Nyb2xsVHlw",
            "ZRINCglTQ1JPTExfVVAQABIPCgtTQ1JPTExfRE9XThABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Naki3D.Common.Protocol.TypesReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Naki3D.Common.Protocol.MouseActionType), typeof(global::Naki3D.Common.Protocol.MouseScrollType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Naki3D.Common.Protocol.MouseMoveData), global::Naki3D.Common.Protocol.MouseMoveData.Parser, new[]{ "Absolute", "Relative" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Naki3D.Common.Protocol.MouseButtonData), global::Naki3D.Common.Protocol.MouseButtonData.Parser, new[]{ "Type", "ButtonId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Naki3D.Common.Protocol.MouseScrollData), global::Naki3D.Common.Protocol.MouseScrollData.Parser, new[]{ "Type" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum MouseActionType {
    [pbr::OriginalName("BUTTON_UP")] ButtonUp = 0,
    [pbr::OriginalName("BUTTON_DOWN")] ButtonDown = 1,
  }

  public enum MouseScrollType {
    [pbr::OriginalName("SCROLL_UP")] ScrollUp = 0,
    [pbr::OriginalName("SCROLL_DOWN")] ScrollDown = 1,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Raspi -> Device
  /// </summary>
  public sealed partial class MouseMoveData : pb::IMessage<MouseMoveData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MouseMoveData> _parser = new pb::MessageParser<MouseMoveData>(() => new MouseMoveData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MouseMoveData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Naki3D.Common.Protocol.MouseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MouseMoveData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MouseMoveData(MouseMoveData other) : this() {
      absolute_ = other.absolute_ != null ? other.absolute_.Clone() : null;
      relative_ = other.relative_ != null ? other.relative_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MouseMoveData Clone() {
      return new MouseMoveData(this);
    }

    /// <summary>Field number for the "absolute" field.</summary>
    public const int AbsoluteFieldNumber = 1;
    private global::Naki3D.Common.Protocol.Vector2 absolute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Naki3D.Common.Protocol.Vector2 Absolute {
      get { return absolute_; }
      set {
        absolute_ = value;
      }
    }

    /// <summary>Field number for the "relative" field.</summary>
    public const int RelativeFieldNumber = 2;
    private global::Naki3D.Common.Protocol.Vector2 relative_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Naki3D.Common.Protocol.Vector2 Relative {
      get { return relative_; }
      set {
        relative_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MouseMoveData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MouseMoveData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Absolute, other.Absolute)) return false;
      if (!object.Equals(Relative, other.Relative)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (absolute_ != null) hash ^= Absolute.GetHashCode();
      if (relative_ != null) hash ^= Relative.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (absolute_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Absolute);
      }
      if (relative_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Relative);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (absolute_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Absolute);
      }
      if (relative_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Relative);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (absolute_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Absolute);
      }
      if (relative_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Relative);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MouseMoveData other) {
      if (other == null) {
        return;
      }
      if (other.absolute_ != null) {
        if (absolute_ == null) {
          Absolute = new global::Naki3D.Common.Protocol.Vector2();
        }
        Absolute.MergeFrom(other.Absolute);
      }
      if (other.relative_ != null) {
        if (relative_ == null) {
          Relative = new global::Naki3D.Common.Protocol.Vector2();
        }
        Relative.MergeFrom(other.Relative);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (absolute_ == null) {
              Absolute = new global::Naki3D.Common.Protocol.Vector2();
            }
            input.ReadMessage(Absolute);
            break;
          }
          case 18: {
            if (relative_ == null) {
              Relative = new global::Naki3D.Common.Protocol.Vector2();
            }
            input.ReadMessage(Relative);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (absolute_ == null) {
              Absolute = new global::Naki3D.Common.Protocol.Vector2();
            }
            input.ReadMessage(Absolute);
            break;
          }
          case 18: {
            if (relative_ == null) {
              Relative = new global::Naki3D.Common.Protocol.Vector2();
            }
            input.ReadMessage(Relative);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MouseButtonData : pb::IMessage<MouseButtonData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MouseButtonData> _parser = new pb::MessageParser<MouseButtonData>(() => new MouseButtonData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MouseButtonData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Naki3D.Common.Protocol.MouseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MouseButtonData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MouseButtonData(MouseButtonData other) : this() {
      type_ = other.type_;
      buttonId_ = other.buttonId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MouseButtonData Clone() {
      return new MouseButtonData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Naki3D.Common.Protocol.MouseActionType type_ = global::Naki3D.Common.Protocol.MouseActionType.ButtonUp;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Naki3D.Common.Protocol.MouseActionType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "button_id" field.</summary>
    public const int ButtonIdFieldNumber = 2;
    private int buttonId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ButtonId {
      get { return buttonId_; }
      set {
        buttonId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MouseButtonData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MouseButtonData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (ButtonId != other.ButtonId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Naki3D.Common.Protocol.MouseActionType.ButtonUp) hash ^= Type.GetHashCode();
      if (ButtonId != 0) hash ^= ButtonId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Naki3D.Common.Protocol.MouseActionType.ButtonUp) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (ButtonId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ButtonId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Naki3D.Common.Protocol.MouseActionType.ButtonUp) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (ButtonId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(ButtonId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Naki3D.Common.Protocol.MouseActionType.ButtonUp) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (ButtonId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ButtonId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MouseButtonData other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Naki3D.Common.Protocol.MouseActionType.ButtonUp) {
        Type = other.Type;
      }
      if (other.ButtonId != 0) {
        ButtonId = other.ButtonId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Naki3D.Common.Protocol.MouseActionType) input.ReadEnum();
            break;
          }
          case 16: {
            ButtonId = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Naki3D.Common.Protocol.MouseActionType) input.ReadEnum();
            break;
          }
          case 16: {
            ButtonId = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MouseScrollData : pb::IMessage<MouseScrollData>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MouseScrollData> _parser = new pb::MessageParser<MouseScrollData>(() => new MouseScrollData());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MouseScrollData> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Naki3D.Common.Protocol.MouseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MouseScrollData() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MouseScrollData(MouseScrollData other) : this() {
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MouseScrollData Clone() {
      return new MouseScrollData(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Naki3D.Common.Protocol.MouseScrollType type_ = global::Naki3D.Common.Protocol.MouseScrollType.ScrollUp;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Naki3D.Common.Protocol.MouseScrollType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MouseScrollData);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MouseScrollData other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Naki3D.Common.Protocol.MouseScrollType.ScrollUp) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Type != global::Naki3D.Common.Protocol.MouseScrollType.ScrollUp) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Type != global::Naki3D.Common.Protocol.MouseScrollType.ScrollUp) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Naki3D.Common.Protocol.MouseScrollType.ScrollUp) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MouseScrollData other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Naki3D.Common.Protocol.MouseScrollType.ScrollUp) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Naki3D.Common.Protocol.MouseScrollType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Type = (global::Naki3D.Common.Protocol.MouseScrollType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
